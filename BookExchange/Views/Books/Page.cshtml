@model PaginatedList<BookExchange.Models.Book>

@{
    ViewData["Title"] = "Books";
    var modelNum = 0;
}

<head>
    <title>BookSearch</title>

    <link rel="stylesheet" href="~/css/BookIndex.css" asp-append-version="true" />
    <script src="~/js/BookIndex.js" asp-append-version="true"></script>
</head>

<body>
    <div class="main">

        <div class="searchContainer">
            <form asp-action="Page" method="get">
                <div class="form-actions no-color">
                    <input type="text" id="searchBar" placeholder="Search..." name="SearchString" value="@ViewData["CurrentFilter"]">
                    <input type="submit" value="Search" class="SearchButton" />
                </div>
            </form>
        </div>

        <table>
            @foreach (var item in Model)
            {
                var ISBN = item.ISBN;
                var imageSource = @"\data\thumbnails\" + ISBN + ".jpg";
                var Start = "<tr>";
                var End = "</tr>";

                if (modelNum == 0 || modelNum == 2 || modelNum == 4)
                {
                    @Html.Raw(Start);
                }

                <td>
                    <div class="card hover">
                        <img src=@imageSource>

                        <div class="bookInfo">
                            <h2 id="bookTitle">@Html.DisplayFor(modelItem => item.Title)</h2>
                            <h4 id="author">@Html.DisplayFor(modelItem => item.Author)</h4>
                            <p id="ISBN">ISBN: @Html.DisplayFor(modelItem => item.ISBN)</p>
                        </div>

                        <a class="button" asp-action="Details" asp-route-id="@item.BookID">Details</a>
                    </div>
                </td>

                if (modelNum == 1 || modelNum == 3 || modelNum == 5)
                {
                    @Html.Raw(End);
                }

                modelNum += 1;
            }

        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            var currentPage = "";
        }

        <div class="pagination">
            <a asp-action="Page"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="@prevDisabled">
                &laquo;
            </a>

            @for (var i=1; i<=@Model.TotalPages; i++)
            {
                currentPage = (i == Model.PageIndex) ? "active" : "";

                <a asp-action="Page"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-pageNumber="@i"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="@currentPage">
                        @i.ToString()
                </a>
            }
            
            <a asp-action="Page"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="@nextDisabled">
                &raquo;
            </a>
        </div>
    </div>
</body>
